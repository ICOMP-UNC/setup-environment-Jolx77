name: "Doc check"
description: "Code documentation generation with Doxygen"

runs:
  using: "composite"
  steps:
    - name: "Run doxygen command"
      shell: bash
      run: |
          # We only make check, not changes
          DOX_CONF_FILE=$(pwd)/Doxyfile

          # Actualiza el archivo Doxyfile con las rutas de los archivos fuente del proyecto
          # { ... }: Esta sintaxis define un bloque de código que se ejecuta en el shell
          # cat $DOX_CONF_FILE: Imprime el contenido de la configuración actual del archivo Doxyfile
          # echo "INPUT" = $(pwd)/src $(pwd)/include $(pwd)/lib: Agrega una línea que defina los directorios de código fuente

          {
              cat $DOX_CONF_FILE
              echo "INPUT" = $(pwd)/src $(pwd)/include $(pwd)/lib
          } > $DOX_CONF_FILE

          # Ejecuta el comando 'dot' con sudo para procesar la configuración del archivo Doxyfile

          sudo dot -c

          ERROR_FILE_FLAG=$(pwd)/dox_errors.txt

          # Ejecutar Doxygen con el archivo de configuración actualizado
          #  doxygen -s $DOX_CONF_FILE: Ejecuta Doxygen con el indicador '-s' que especifica el archivo de configuración
          #  > $ERROR_FILE_FLAG: Redirige el output al archivo de errores
          
          DOXYGEN_COMMAND=$(doxygen -s $DOX_CONF_FILE) > $ERROR_FILE_FLAG

          if [ -s $ERROR_FILE_FLAG ]; then
              echo "Error: There are some files that are not documented correctly"
              exit 1
          else
              echo "All files are documented correctly. Niiiceee"
              exit 0
          fi

    # Upload errors as an artifact, when failed
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: Doxygen errors!!!
        path: $(pwd)/dox_errors.txt
        retention-days: 1
